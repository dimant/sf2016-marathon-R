source("D:/src/sf2016-marathon-R/RProject/script.R", encoding = "Windows-1252")
marathon[1:5,]
marathon[1:5,1]
allT
mean(allTimes)
var(allTimes)
sd(allT)
sd(allTimes)
var(allTi)
var(allTimes)
sd(allTimes)
sqrt(var(allTimes))
skewness(allTimes)
kur(allTimes)
kurtosis(allTimes)
hist(allTimes)
hist(allTimes, main)
rtvs::debug_source("script.R")
hist(allTimes, main="")
rtvs::debug_source("script.R")
hist(allTimes, main="", xlab = "time")
hist(allTimes, main="", xlab = "Time")
boxplot(allTi)
boxplot(allTimes)
boxplot(allTimes, xlab="Time")
boxplot(allTimes, ylab="Time")
barchart(genders)
barplot(genders)
source("D:/src/sf2016-marathon-R/RProject/script.R", encoding = "Windows-1252")
barplot(genders)
genders
barplot(table(genders))
plot(rnorm(500))
hist(rnorm(500))
plot(density(rnorm(500)))
plot(density(rnorm(1000)))
plot(density(rnorm(10000)))
plot(density(rnorm(50000)))
plot(density(rnorm(50000)))
plot(qnorm)
plot(pnorm)
plot(rnorm)
plot(qnorm)
?rnorm
plot(dnorm)
plot(dnorm, from=-1.5, to=1.5)
plot(dnorm, from=-6, to=6)
plot(dnorm, from=-3, to=3)
plot(dnorm, from=-3, to=3, ylap=p)
plot(dnorm, from=-3, to=3, ylap="p")
plot(dnorm, from=-3, to=3, ylab="p")
plot(dnorm, ylab="p", from=-3, to=3)
plot(dnorm, ylab="p", from=-3, to=3)
?dnorm
source("D:/src/sf2016-marathon-R/RProject/script.R", encoding = "Windows-1252")
 hist(allTimes, main="", xlab = "Time")
?hist
 hist(allTimes, main="", xlab = "Time", breaks = 10)
 hist(allTimes, main="", xlab = "Time", breaks = 20)
 hist(allTimes, main="", xlab = "Time", breaks = 100)
 hist(allTimes, main="", xlab = "Time", breaks = 5)
 hist(allTimes, main="", xlab = "Time", breaks = 50)
 hist(allTimes, main="", xlab = "Time", breaks = 100)
par(mfrow(2, 1))
par(mfrow=c(2, 1))
 hist(allTimes, main="", xlab = "Time", breaks = 10)
 hist(allTimes, main="", xlab = "Time", breaks = 100)
par(mfrow=c(1, 2))
 hist(allTimes, main="", xlab = "Time", breaks = 10)
 hist(allTimes, main="", xlab = "Time", breaks = 100)
par(mfrow = c(1, 2)) hist(allTimes, main = "", xlab = "Time", breaks = 10) hist(allTimes, main = "", xlab = "Time", breaks = 100)
par(mfrow = c(2, 2)) hist(allTimes, main = "", xlab = "Time", breaks = 5) hist(allTimes, main = "", xlab = "Time", breaks = 10) hist(allTimes, main = "", xlab = "Time", breaks = 100)
?par
par(new=TRUE)
 hist(allTimes, main="", xlab = "Time", breaks = 100)
 hist(allTimes, main="", xlab = "Time", breaks = 100)
par(mfrow = c(2, 2)) hist(allTimes, main = "", xlab = "Time", breaks = 5) hist(allTimes, main = "", xlab = "Time", breaks = 10) hist(allTimes, main = "", xlab = "Time", breaks = 100) par(mfrow = c(1, 1))
par(mfrow = c(2, 2)) hist(allTimes, main = "5 bins", xlab = "Time", breaks = 5) hist(allTimes, main = "10 bins", xlab = "Time", breaks = 10) hist(allTimes, main = "100 bins", xlab = "Time", breaks = 100) par(mfrow = c(1, 1))
barplot(sort(letterTime, decreasing =TRUE))
plot(nameLetterFreqs[,1] ~ allQuantiles)
barplot(sort(letterTime, decreasing =TRUE))
plot(nameLetterFreqs[,1] ~ allQuantiles)
barplot(sort(letterAgeGrade, decreasing =TRUE))
plot(nameLetterFreqs[,1] ~ allAgeGradeQt)
barplot(sort(letterTime, decreasing =TRUE))
barplot(sort(letterTime, decreasing =TRUE), ylab="% of variance explained")
barplot(sort(letterAgeGrade, decreasing = TRUE), ylab = "% of variance explained")
plot(nameLetterFreqs[,1] ~ allQuantiles)
?plot
plot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "Quantiles")
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "Quantiles")
?boxplot
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "Quantiles")
        "50%-60%", "60%-70%", "70%-80%", "80%-90%", "90%-100%"))
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "Quantiles",      names = c(         "0%-10%", "10%-20%", "20%-30%", "30%-40%", "40%-50%",          "50%-60%", "60%-70%", "70%-80%", "80%-90%", "90%-100%"))
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "Quantiles",      names = c(         "0%-10%", "10%-20%", "20%-30%", "30%-40%", "40%-50%",          "50%-60%", "60%-70%", "70%-80%", "80%-90%", "90%-100%"))
    names = 1:10)
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "Quantiles", names = 1:10)
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10)
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency letter a")
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency letter of a")
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a")
boxplot(nameLetterFreqs[, 1] ~ allAgeGradeQt, xlab = "bins", names = 1:10, ylab = "frequency of letter a")
boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a")
par(mfrow=c(1,2)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained") boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a")
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained") boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a")
par(mfrow = c(2, 1)) barplot(sort(letterAgeGrade, decreasing = TRUE), ylab = "% of variance explained") boxplot(nameLetterFreqs[, 1] ~ allAgeGradeQt, xlab = "bins", names = 1:10, ylab = "frequency of letter a")
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained") boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a")
par(mfrow = c(2, 1)) barplot(sort(letterAgeGrade, decreasing = TRUE), ylab = "% of variance explained") boxplot(nameLetterFreqs[, 1] ~ allAgeGradeQt, xlab = "bins", names = 1:10, ylab = "frequency of letter a")
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", title="% variance explained by letter") boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a", title="Frequence of letter a by time")
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", main="% variance explained by letter") boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a", main="Frequence of letter a by time")
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", main="% variance of time explained by letter") boxplot(nameLetterFreqs[, 1] ~ allQuantiles, xlab = "bins", names = 1:10, ylab="frequency of letter a", main="Frequency of letter a by time")
par(mfrow = c(2, 1)) barplot(sort(letterAgeGrade, decreasing = TRUE), ylab = "% of variance explained", main = "% variance of age grade explained by letter") boxplot(nameLetterFreqs[, 1] ~ allAgeGradeQt, xlab = "bins", names = 1:10, ylab = "frequency of letter a", main = "Frequency of letter a by age grade")
nameLetterFreqs[, 1] ~ allQuantiles
x <- nameLetterFreqs[, 1] ~ allQuantiles
x
x[1]
split(nameLet)
split(allQ)
split(allQuantiles, nameLetterFreqs[,1])
sapply(split(allQuantiles, nameLetterFreqs[,1]), median)
split(allQuantiles, nameLetterFreqs[,1])
split(allQuantiles, nameLetterFreqs[,1])
count
length()
sapply(split(allQuantiles, nameLetterFreqs[,1]), length)
allQ
as.integer(allQuantiles)
sapply(split(allQuantiles, nameLetterFreqs[,1]), asInteger)
sapply(split(allQuantiles, nameLetterFreqs[,1]), as.integer)
sapply(sapply(split(allQuantiles, nameLetterFreqs[,1]), as.integer), median)
barplot(sapply(sapply(split(allQuantiles, nameLetterFreqs[,1]), as.integer), median))
typeof(allQuantiles)
typeof(allQuantiles)[1]
median(allQuantiles)
allQuantiles[1]
allQuantiles
split(allQuantiles, nameLetterFreqs[,1])
sapply(split(allQuantiles, nameLetterFreqs[,1]), as.integer)
split(allQuantiles, nameLetterFreqs[,1])
split(allQuantiles, nameLetterFreqs[,1])
allQ
allQuantiles
split(nameL allQuantiles
split(nameLetterFreqs, allQuantiles)
split(nameLetterFreqs[,1], allQuantiles)
sapply(split(nameLetterFreqs[,1], allQuantiles), median)
barplot(sapply(split(nameLetterFreqs[,1], allQuantiles), median))
barplot(sapply(split(nameLetterFreqs[,1], allQuantiles), median), names = 1:10)
barplot(sapply(split(nameLetterFreqs[,1], allQuantiles), median), names = 1:10)barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "frequency of letter a", main = "Frequency of letter a by time")
barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "frequency of letter a", main = "Frequency of letter a by time")
barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "frequency of letter a", main = "Frequency of letter a by time")
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", main="% variance of time explained by letter") barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "frequency of letter a", main = "Frequency of letter a by time") par(mfrow = c(1, 1))
barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by time")
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", main="% variance of time explained by letter") barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by time") par(mfrow = c(1, 1))
par(mfrow = c(2, 1)) barplot(sort(letterAgeGrade, decreasing = TRUE), ylab = "% of variance explained", main = "% variance of age grade explained by letter") barplot(sapply(split(nameLetterFreqs[, 1], allAgeGradeQt), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by time") par(mfrow = c(1, 1))
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", main="% variance of time explained by letter") barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by time") par(mfrow = c(1, 1))
par(mfrow = c(2, 1)) barplot(sort(letterAgeGrade, decreasing = TRUE), ylab = "% of variance explained", main = "% variance of age grade explained by letter") barplot(sapply(split(nameLetterFreqs[, 1], allAgeGradeQt), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by time") par(mfrow = c(1, 1))
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", main="% variance of time explained by letter") barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by time.") par(mfrow = c(1, 1))
par(mfrow=c(2,1)) barplot(sort(letterTime, decreasing = TRUE), ylab = "% of variance explained", main="% variance of time explained by letter.") barplot(sapply(split(nameLetterFreqs[, 1], allQuantiles), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by time.") par(mfrow = c(1, 1))
par(mfrow = c(2, 1)) barplot(sort(letterAgeGrade, decreasing = TRUE), ylab = "% of variance explained", main = "% variance of age grade explained by letter.") barplot(sapply(split(nameLetterFreqs[, 1], allAgeGradeQt), median), xlab = "bins", names = 1:10, ylab = "median frequency of letter a", main = "Frequency of letter a by age grade.") par(mfrow = c(1, 1))
par(mfrow = c(2, 2)) hist(allTimes, main = "5 bins", xlab = "Time", breaks = 5) hist(allTimes, main = "10 bins", xlab = "Time", breaks = 10) hist(allTimes, main = "100 bins", xlab = "Time", breaks = 100) par(mfrow = c(1, 1))
marathon$pace
times(marathon$pace)
source("D:/src/sf2016-marathon-R/RProject/script.R", encoding = "Windows-1252")
?times
concat
paste("00:", marathon$pace[1])
paste("00:", marathon$pace[1], "")
?paste
source("D:/src/sf2016-marathon-R/RProject/script.R", encoding = "Windows-1252")
sapply(marathon$pace, function(x) { paste("00:", x, sep=""); })
unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep=""); }))
times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep=""); })))
times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep=""); })))*secP
times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep=""); })))*secPerDay
paces <- times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep = ""); }))) * secPerDaytimes(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep=""); })))*secPerDay
paces <- times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep = ""); }))) * secPerDay
paces
rownames(paces) <- c()
paces
paces[,1]
paces[1]
paces <- t(paces)
paces
rownames(paces) <- c()
paces
colnames(paces) <- c()
paces
paces <- times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep = ""); }))) * secPerDay colnames(paces) <- c()
paces
paces[1]
plot(paces)
hist(paces)
shapiro
shapiro.test(paces)
qqline(paces)
as.a
as.array(paces)
as.vector(paces)
paces <- as.vector(times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep = ""); }))) * secPerDay)as.vector(paces)
paces <- as.vector(times(unlist(sapply(marathon$pace, function(x) { paste("00:", x, sep = ""); }))) * secPerDay)
paces
median(paces)
qql
qqline(paces)
qqpl
qqplot(paces)
qqnorm(paces)
pearson.test(paces)
install.
install.packages(nortest)
install.packages("nortest")
ad.test(paces)
library(nortest)
ad.test(paces)
cvm.test(paces)
pearson
pearson.test(paces)
sf.test(paces)
skewness.norm.test
